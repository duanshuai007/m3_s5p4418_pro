##about sp(stack point)

###mrs:
只有mrs指令可以对状态寄存器CPSR和SPSR进行读操作。通过读CPSR可以获得当前处理器工作状态。读SPSR寄存器可以获得进入异常前的处理器状态(只有异常模式下有SPSR寄存器)。

###msr：
只有msr指令可以对状态寄存器CPSR和SPSR进行写操作。与mrs配合使用可以实现CPSR和SPSR的读-修改-写操作。可以切换处理器模式、允许禁止IRQ/FIQ中断等。

由于xPSR寄存器代表了CPU状态，每一位都有特殊意义。在执行对xPSR状态寄存器写入时，为了防止误操作和方便记忆，将xPSR里32位分成四个区域，每区域用小写字母表示：

```
	c 	控制域屏蔽 psr[7:0]
	x 	扩展域屏蔽 psr[15:8]
	s 	状态域屏蔽 psr[23:16]
	f	标志域屏蔽 psr[31:24]
```
域名必须小写。

使用bl进行跳转时自动将pc保存在lr寄存器中，因此使用bl跳转不需要对pc进行压栈。在返回时直接使用mov pc, lr即可。

stmdb和ldmia指令一般配对使用，stmdb用于寄存器压栈，ldmia用于寄存器弹栈，作用是保存使用到的寄存器。

```
STMIB（地址先增而后完成操作）、STMFA（满递增堆栈）；
STMIA（完成操作而后地址递增）、STMEA（空递增堆栈）；
STMDB（地址先减而后完成操作）、STMFD（满递减堆栈）；
STMDA（完成操作而后地址递减）、STMED（空递减堆栈）。
上述各组2个指令含义相同只是适用场合不同，同理有：
LDMIB、LDMED；
LDMIA、LDMFD；
LDMDB、LDMEA；
LDMDA、LDMFA。

IA模式表示：每次传送后地址+4；(After Increase)
DB模式表示：每次传送前地址-4；(Before Decrease)
多寄存器加载/存储指令共有8种模式（4个用与数据块的传输，4个用于栈操作）
```
#cpsr

|31|30|29|28|27～8|7|6|5|4|3|2|1|0|
|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|
|N|Z|C|V|---|I|F|T|M4|M3|M2|M1|M0|

|标志位|含义|
|:-:|:-:|
|N|当用两个补码表示的带符号数进行运算时，N=1表示运算的结果为负数；N=0表示运算的结果为正数或零||
|Z|Z=1表示运算的结果为零，Z=0表示运算的结果非零。|
|C|可以有4种方法设置C的值：-加法运算（包括CMP）：当运算结果产生了进位时（无符号数溢出），C=1，否则C=0。-减法运算（包括CMP）：当运算时产生了借位时（无符号数溢出），C=0，否则C=1。-对于包含移位操作的非加/减运算指令，C为移出值的最后一位。-对于其它的非加/减运算指令，C的值通常不会改变。|
|V|可以有2种方法设置V的值：-对于加减法运算指令，当操作数和运算结果为二进制的补码表示的带符号数时，V=1表示符号位溢出-对于其它的非加/减运算指令，V的值通常不会改变。|
|Q|在ARM V5及以上版本的E系列处理器中，用Q标志位指示增强的DSP运算指令是否发生了溢出。在其它版本的处理器中，Q标志位无定义|

```
r0-r3 用作传入函数参数
r4-r11用作存放函数的局部变量
r12用作内部调用暂时寄存器ip
r13栈指针sp
r14链接寄存器lr
r15程序计数器pc
```

ARM保存中断时为什么使用sub lr, lr, #4

1. 首先要谈流水线，在arm执行过程中一般分为取指，译码，执行阶段.也就是假设当前第一条指令在执行阶段.第二条指令在译码阶段.第三条指令在取指阶段.当前正在执行的指令地址为pc-8，第二条就为pc-4，而pc现在真正指向已处于pc位置.
 
2. 一般pc在发生中断时lr保存的是当前的pc值，这里pc值是多少呢？？
     当发生中断肯定保存的pc是第三条指令，而我们从中断返回肯定不是执行第三条指令，而是紧接着的第二条指令，所以应该保存的 lr = pc - 4，但是当执行到此位置时pc值已经改变，肯定不对，还好发生中断时 mov lr，pc 所以这里就可以直接使用 sub lr，lr，#4
     
程序通过CPSR和SPSR来进行模式切换，CPSR在任何处理器模式下被访问。每种模式下都有一个专用的物理状态寄存器，称为SPSR(备份程序状态寄存器)。
当特定的异常中断发生时，这个寄存器用于存放当前程序状态寄存器的内容。在异常中断退出时，可以用SPSR来恢复CPSR。由于用户模式和系统模式不是异常中断模式，所以他没有SPSR。当用户在用户模式或系统模式访问SPSR，将产生不可预知的后果。

|工作模式|说明|
|:---:|:---|
|用户模式USR| 正常程序执行模式，不能直接切换到其他模式|
|系统模式SYS| 运行操作系统的特权任务，与用户模式类似，但具有可以直接切换到其他任务的特权|
|快中断模式FIQ| 支持告诉数据传输及通道处理，FIQ异常响应时进入此模式|
|中断模式IRQ| 用于通用中断处理，IRQ异常响应时进入此模式|
|管理模式SVC| 操作系统保护模式，系统复位和软件中断响应时进入此模式。由系统调用执行软中断SWI命令触发|
|中止模式ABT| 用于支持虚拟内存和存储器保护，在ARM7TDMI没有大用处|
|未定义模式UND|支持硬件协处理器的软件仿真，未定义指令异常响应时进入此模式|